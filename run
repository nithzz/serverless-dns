#!/bin/sh

set -eu

# this script is for development/test runs only
# defaults: stackoverflow.com/a/16753536
runtime="${1:-node}";
profiler="${2:-$1}";
waitsec="${3:-0}";
qdoh="${QDOH:-invalid}";

echo "run $runtime";

# patorjk.com/software/taag/#p=display&c=echo&f=Small%20Slant&t=r-profiler
profilerbanner() {
  echo "                              ___ _  __         ";
  echo "  ____ ____ ___   ____ ___   / _/(_)/ /___  ____";
  echo " / __//___// _ \ / __// _ \ / _// // // -_)/ __/";
  echo "/_/       / .__//_/   \___//_/ /_//_/ \__//_/   ";
  echo "         /_/                                    ";
}

# patorjk.com/software/taag/#p=display&c=echo&f=Small%20Slant&t=rethinkdns
banner() {
  echo "             __   __    _        __       __         ";
  echo "  ____ ___  / /_ / /   (_)___   / /__ ___/ /___   ___";
  echo " / __// -_)/ __// _ \ / // _ \ /  '_// _  // _ \ (_-<";
  echo "/_/   \__/ \__//_//_//_//_//_//_/\_\ \_,_//_//_//___/";
  echo "                                                     ";
}

bgcmd() {
  $1 &
}

bgsilent() {
  $1 >/dev/null 2>&1 &
}

dohquery() {
  resolver="https://localhost:8080/"
  prefix=$( dd if=/dev/urandom bs=20 count=20 status=none | tr -dc 'A-Z0-9' | xargs echo )
  domain="${prefix}.dnsleaktest.com"
  pstart="${qdoh} -i -t A -s ${resolver} -q ${domain}"
  bgsilent "$pstart"
}

reqs() {
  while true
  do
    dohquery

    if [ $1 != "0" ]; then
      sleep $1
    fi

  done
}

if [ $runtime = "help" ] || [ $runtime = "h" ]; then
  echo "note: make sure node / deno / wrangler are in path";
  echo "usage: $0 [node|deno|workers] [[p1|p2] [waitsec]]";
  exit 0;
fi

if [ $runtime = "deno" ] || [ $runtime = "d" ]; then
  echo "note: deno v1.17+ required";
  echo "using `which deno`";
  start="deno run --unstable \
           --allow-env \
           --allow-net \
           --allow-read \
           --allow-write \
           --import-map=import_map.json \
           src/server-deno.ts";
elif [ $runtime = "workers" ] || [ $runtime = "w" ]; then
  echo "note: wrangler v1.16+ required";
  echo "using `which wrangler`";
  start="wrangler dev --verbose";
else
  echo "note: nodejs v16+ required";
  echo "using `which node`";
  start="node --trace-warnings ./src/server-node.js";
fi

if [ $profiler = "profile1" ] || [ $profiler = "p1" ]; then
  if [ $qdoh = "invalid" ]; then
    echo "Specify env QDOH path"
    exit 1
  fi

  echo "profiler: running doh with fetch";
  profilerbanner;
  DISABLE_BLOCKLISTS=true \
    PROFILE_DNS_RESOLVES=true \
    NODE_DOH_ONLY=true \
    NODE_AVOID_FETCH=false \
    LOG_LEVEL=warn \
    $start &
  sleep 1
  reqs "$waitsec"
elif [ $profiler = "profile2" ] || [ $profiler = "p2" ]; then
  if [ ${qdoh} = "invalid" ]; then
    echo "Specify env QDOH path"
    exit 1
  fi

  echo "profiler: running non-fetch doh";
  profilerbanner;
  DISABLE_BLOCKLISTS=true \
    PROFILE_DNS_RESOLVES=true \
    NODE_DOH_ONLY=true \
    NODE_AVOID_FETCH=true \
    LOG_LEVEL=warn \
    $start &
  sleep 1
  reqs "$waitsec"
elif [ $profiler = "profile3" ] || [ $profiler = "p3" ]; then
  if [ ${qdoh} = "invalid" ]; then
    echo "Specify env QDOH path"
    exit 1
  fi
  if [ $runtime != "node" ] && [ $runtime != "n" ]; then
    echo "Profile3 only valid on Node"
    exit 1
  fi

  echo "profiler: running podns";
  profilerbanner;
  DISABLE_BLOCKLISTS=true \
    PROFILE_DNS_RESOLVES=true \
    NODE_DOH_ONLY=false \
    LOG_LEVEL=warn \
    $start &
  sleep 1
  reqs "$waitsec"
else
  banner;
  bgcmd "$start"
fi

wait

